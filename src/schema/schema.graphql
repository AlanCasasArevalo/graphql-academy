type Query {
    "Lista de estudiantes de la academia"
    students: [Student!]!
    "Estudiante de la academia seleccionado por id"
    student(id: ID!): Student!
    "Lista de cursos de la academia"
    courses: [Course!]!
    "Cursos de la academia seleccionado por id"
    course(id: ID!): Course!
}

type Mutation {
    newCourse(course: CourseInput!):[Course]!
    updateCourse(course: CourseInput!):[Course]!
    deleteCourse(courseId: ID!):[Course]!
}

type Student {
    "Id del estudiante"
    id: ID!
    name: String!
    email: String!
    website: String
    courses: [Course!]!
}

type Course {
    "Cursos posibles"
    id: ID!
    title: String!
    description: String!
    classes: Int!
    time: Float!
    logo: String!
    level: Level!
    path: String!
    teacher: String!
    students: [Student]!
    reviews: [Rating]!
}

enum Level {
    TODOS
    NOVATOS
    INTERMEDIO
    EXPERTO
}

type Rating {
    id: ID
    name: String
    points: Float
    comment: String
}


